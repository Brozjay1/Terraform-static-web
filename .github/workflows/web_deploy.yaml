name: Deploying A static web using Terraform

on:
    push:
        branches:
            - master

jobs:
    terraform:
        name: Terraform Apply
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v2
              with: 
                terraform_version: 1.9.5
            
            - name: Configure Aws credentials
              run: |
                mkdir -p ~/.aws
                echo "[default]"> ~/.aws/credentials
                echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >>~/.aws/credentials
                echo "aws_secret_access_key= $AWS_SECRET_ACCESS_KEY" >>~/.aws/credentials
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}

            - name: Initializing Terraform
              run:  terraform init
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: us-east-1

            - name: Planning Terraform
              run:  terraform plan
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: us-east-1

            - name: Applying or Destroying Terraform
              run:  |
                if  [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
                    terraform destroy --auto-approve
                else
                    terraform apply --auto-approve
                fi
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: us-east-1

    deploy_website:
        name:    Deploy website to EC2
        needs:   terraform
        runs-on: ubuntu-latest
        if: ${{ github.event.inputs.action != 'destroy' }} # it will only run if action is not destroy

        steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Upload Website Files
          run:  |
            IP_ADDRESS=$(terraform output -raw instance_public_ips)
            for ip in $IP_ADDRESSES; do
                scp -o StrictHostKeyChecking=no -i "${ secrets.SSH_PRIVATE_KEY }" -r ./my-static-web/* ec2-user@ip:/var/www/html/
                done
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}